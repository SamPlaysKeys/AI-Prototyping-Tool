{{- if .Values.web.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ai-prototyping-tool.fullname" . }}-web
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ai-prototyping-tool.labels" . | nindent 4 }}
    app.kubernetes.io/component: web
spec:
  replicas: {{ .Values.web.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "ai-prototyping-tool.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        {{- include "ai-prototyping-tool.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.monitoring.prometheus.enabled }}
        {{- with .Values.monitoring.prometheus.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "ai-prototyping-tool.serviceAccountName" . }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.web.securityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: web
          image: "{{ .Values.global.imageRegistry }}{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.web.service.targetPort }}
              protocol: TCP
          env:
            - name: PYTHONPATH
              value: "/app"
            - name: AIPROTO_APP_ENVIRONMENT
              value: {{ .Values.app.environment | quote }}
            - name: AIPROTO_APP_DEBUG
              value: {{ .Values.app.debug | quote }}
            {{- if .Values.lmstudioMock.enabled }}
            - name: AIPROTO_LM_STUDIO_BASE_URL
              value: "http://{{ include "ai-prototyping-tool.fullname" . }}-lmstudio-mock:{{ .Values.lmstudioMock.service.port }}"
            {{- end }}
            - name: AIPROTO_LOGGING_LEVEL
              value: {{ .Values.config.data.logging.level | quote }}
            - name: AIPROTO_SERVER_HOST
              value: {{ .Values.config.data.server.host | quote }}
            - name: AIPROTO_SERVER_PORT
              value: {{ .Values.config.data.server.port | quote }}
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.extraEnvVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.extraEnvVarsSecret }}
          {{- end }}
          {{- if .Values.extraEnvVarsConfigMap }}
          envFrom:
            - configMapRef:
                name: {{ .Values.extraEnvVarsConfigMap }}
          {{- end }}
          volumeMounts:
            {{- if .Values.config.create }}
            - name: config
              mountPath: {{ .Values.config.mountPath }}
              subPath: config.toml
              readOnly: true
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: /app/output
              subPath: output
            - name: data
              mountPath: /app/logs
              subPath: logs
            {{- else }}
            - name: output
              mountPath: /app/output
            - name: logs
              mountPath: /app/logs
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.config.data.monitoring.health_endpoint }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: {{ .Values.config.data.monitoring.health_endpoint }}
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            {{- toYaml .Values.web.containerSecurityContext | nindent 12 }}
        {{- with .Values.sidecarContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.config.create }}
        - name: config
          configMap:
            name: {{ include "ai-prototyping-tool.fullname" . }}-config
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "ai-prototyping-tool.fullname" . }}-data
        {{- else }}
        - name: output
          emptyDir: {}
        - name: logs
          emptyDir: {}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
