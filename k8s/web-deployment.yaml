apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-prototyping-web
  namespace: ai-prototyping-tool
  labels:
    app.kubernetes.io/name: ai-prototyping-tool
    app.kubernetes.io/component: web
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: ai-prototyping-tool
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ai-prototyping-tool
        app.kubernetes.io/component: web
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: web
        image: ai-prototyping-tool:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: AIPROTO_APP_ENVIRONMENT
          value: "production"
        - name: AIPROTO_APP_DEBUG
          value: "false"
        - name: AIPROTO_LM_STUDIO_BASE_URL
          value: "http://lmstudio-mock-service:1234"
        - name: AIPROTO_LOGGING_LEVEL
          value: "INFO"
        - name: AIPROTO_SERVER_HOST
          value: "0.0.0.0"
        - name: AIPROTO_SERVER_PORT
          value: "8000"
        volumeMounts:
        - name: config
          mountPath: /app/config.toml
          subPath: config.toml
          readOnly: true
        - name: output
          mountPath: /app/output
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: ai-prototyping-config
      - name: output
        emptyDir: {}
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
